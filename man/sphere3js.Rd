% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/3JSobjects.R
\name{sphere3js}
\alias{sphere3js}
\title{Add a sphere of defined radius to a data3js object}
\usage{
sphere3js(data3js, x, y, z, radius, col, highlight, ...)
}
\arguments{
\item{data3js}{The data3js object}

\item{x}{x coordinate of the sphere center}

\item{y}{y coordinate of the sphere center}

\item{z}{z coordinate of the sphere center}

\item{radius}{sphere radius}

\item{col}{color}

\item{highlight}{highlight attributes (see \code{highlight3js()})}

\item{...}{other arguments to pass to \code{material3js()}}
}
\description{
Unlike points3js, where geometric points can also be represented as
spheres, this adds sphere that is sized with respect to the actual
dimensions of the plotting space (and so if aspect ratios differ for
each axis may not actually appear sphere-like!).
}
\examples{
# Setup base plot
p <- plot3js(
  xlim = c(-10, 10),
  ylim = c(-5, 5),
  zlim = c(-8, 8)
)

# Add sphere (this will look distorted because of axis scaling)
sphere3js(
  data3js = p,
  0, 0, 0,
  radius = 5,
  col = "green"
)

# Setup base plot with equal aspect ratio
p <- plot3js(
  xlim = c(-10, 10),
  ylim = c(-5, 5),
  zlim = c(-8, 8),
  aspect = c(1, 1, 1)
)

# Add sphere (fixed aspect ratio now makes the sphere look spherical)
sphere3js(
  data3js = p,
  0, 0, 0,
  radius = 5,
  col = "green"
)

}
