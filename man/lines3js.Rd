% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/3JSlines.R
\name{lines3js}
\alias{lines3js}
\title{Add lines to a data3js object}
\usage{
lines3js(
  data3js,
  x,
  y,
  z,
  lwd = 1,
  col = "black",
  highlight,
  geometry = FALSE,
  ...
)
}
\arguments{
\item{data3js}{The data3js object}

\item{x}{x coordinates}

\item{y}{y coordinates}

\item{z}{z coordinates}

\item{lwd}{line width}

\item{col}{line color}

\item{highlight}{highlight characteristics (see `highlight3ks()`)}

\item{geometry}{logical, should the point be rendered as a physical geometry}

\item{...}{further parameters to pass to `material3js()`}
}
\description{
This adds lines to a plot, similarly to the `lines()` function. You have to decide whether
you would like lines to physically exist as geometries in the scene (geometry = TRUE), i.e. as
cylinders, or rather as webgl lines draw into the scene (geometry = FALSE). Such lines added will
be "non-geometric" in the sense that they do not physically exist in the scene, so will not be
shaded according to lighting, and their width will remain constant independent of how the plot
is zoomed. As with `glpoints()` lines drawn in this way are rendered much more efficiently
and sometimes the fixed width characteristic is desirable, for example grid lines are drawn
in this way.
}
